@model PaginatedList<Subsogator.Web.Models.Languages.ViewModels.AllLanguagesViewModel>

@{
    ViewData["Title"] = "Languages List";
}

<h3>@ViewData["Title"]</h3>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Language</a>
</p>
@if (TempData["LanguageSuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["LanguageSuccessMessage"]
    </div>
}

@if (!Model.Any())
{
    <h3>There are currently no languages</h3>
}
else
{
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                <b>Search by actor names: </b>
                <input type="text" name="SearchTerm" class="search-term-input"
                       value="@ViewData["LanguageSearchFilter"]" />
                <input type="submit" value="Search" class="btn btn-success" />
                <a asp-action="Index" class="btn btn-primary">Reset</a>
            </p>
        </div>
    </form>

    <table class="table table-bordered table-dark table-striped table-hover mt-3">
        <thead class="thead-light">
            <tr class="text-center">
                <th>
                    <a asp-action="Index" class="sorting-link"
                       asp-route-sortOrder="@ViewData["LanguageNameSort"]"
                       asp-route-currentFilter="@ViewData["LanguageSearchFilter"]">
                        @Html.DisplayNameFor(language => language.ViewModel.Name)
                    </a>
                </th>
                <th>
                    Related Film Productions
                </th>
                <th>
                    Actions
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var language in Model)
            {
                <tr class="text-center">
                    <td>
                        @Html.DisplayFor(languageModelItem => language.Name)
                    </td>
                    <td>
                        <ul>
                            @if (language.RelatedFilmProductions.Count() > 0)
                            {
                                @foreach (var filmProduction in language.RelatedFilmProductions)
                                {
                                    <li>@filmProduction.Title</li>
                                }
                            }
                            else
                            {
                                <li>No Related Film Productions</li>
                            }
                        </ul>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@language.Id" class="btn btn-light">Edit</a>
                        <a asp-action="Details" asp-route-id="@language.Id" class="btn btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@language.Id" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="row">
        <div class="col-5">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-pageSize="@ViewData["CurrentPageSize"]"
               asp-route-currentFilter="@ViewData["LanguageSearchFilter"]"
               class="btn btn-outline-primary @(!Model.HasPreviousPage ? "disabled" : "")">
                Previous
            </a>

            @for (int pageIndex = 1; pageIndex <= @Model.TotalPages; pageIndex++)
            {
                <a class="btn @(Model.PageIndex == pageIndex ? "btn-primary" : "btn-outline-primary")"
                   asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-currentFilter="@ViewData["LanguageSearchFilter"]"
                   asp-route-pageSize="@ViewData["CurrentPageSize"]"
                   asp-route-pageNumber="@pageIndex">
                    @pageIndex
                </a>
            }

            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-pageSize="@ViewData["CurrentPageSize"]"
               asp-route-currentFilter="@ViewData["LanguageSearchFilter"]"
               class="btn btn-outline-primary @(!Model.HasNextPage ? "disabled" : "")">
                Next
            </a>
        </div>
        <div class="col-5">
            <form>
                <div class="form-group">
                    <label asp-for="PageResults" class="control-label"></label>
                    <select name="PageSize" asp-for="PageResults"
                            class="form-control page-size-select"
                        asp-items="Html.GetEnumSelectList<PageResultsEnum>()">
                    </select>
                    <span asp-validation-for="PageResults" class="text-danger"></span>
                </div>
                <a class="btn btn-outline-primary text-primary change-page-size-button"
                   asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]">
                    Change
                </a>
            </form>
        </div>
    </div>

    <div class="row">
        <div class="col-5">
            <div class="mt-2">Page @Model.PageIndex out of @Model.TotalPages </div>
        </div>
    </div>
}
