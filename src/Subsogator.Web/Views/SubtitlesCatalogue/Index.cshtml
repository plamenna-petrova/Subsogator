@model PaginatedList<Subsogator.Web.Models.SubtitlesCatalogue.AllSubtitlesForCatalogueViewModel>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <b>Search by subtitles name: </b>
            <input type="text" name="SearchTerm" class="search-term-input"
                   value="@ViewData["SubtitlesCatalogueSearchFilter"]" />
            <input type="submit" value="Search" class="btn btn-success" />
            <a asp-action="Index" class="btn btn-primary">Reset</a>
        </p>
    </div>
</form>

@if(User.IsInRole(NormalUserRole)) 
{
    <div>
        <a asp-action="BecomeAnUploader" class="btn btn-primary">Become An Uploader</a>
    </div>
}

<div class="container">
    <div class="row">
        @foreach (var subtitles in Model)
        {
            <div class="col-sm-12 col-md-4 p-1">
                <div class="custom-column">
                    <div class="custom-column-content">
                        @if (subtitles.RelatedFilmProduction.ImageName != null)
                        {
                            <img src="~/images/film-productions/@subtitles.RelatedFilmProduction.ImageName"
                                 class="rounded-square"
                                 asp-append-version="true" style="width: 100%; height: 400px;" />
                            <br />
                        }
                        else
                        {
                            <img src="~/images/film-productions/istockphoto-1147544807-612x612.jpg" style="width: 100%; height: 400px;" />
                        }
                    </div>
                    <div class="custom-column-header">@Html.DisplayFor(subtitlesModelItem => subtitles.Name)</div>
                    <div class="custom-column-footer"><a class="btn btn-success" asp-action="Details" asp-route-id="@subtitles.Id">View</a></div>
                </div>
            </div>
        }
    </div>
</div>

@{
    var isPreviousPageDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var isNextPageDisabled = !Model.HasNextPage ? "disabled" : "";

    string getPageButtonAdditionalClassName(int currentPageIndex)
    {
        string pageButtonClassName = "";

        if (Model.PageIndex == currentPageIndex)
        {
            pageButtonClassName = "btn-primary";
        }
        else
        {
            pageButtonClassName = "btn-outline-primary";
        }

        return pageButtonClassName;
    }
}

<div class="row mt-5">
    <div class="col-5">
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-pageSize="@ViewData["CurrentPageSize"]"
           asp-route-currentFilter="@ViewData["SubtitlesCatalogueSearchFilter"]"
           class="btn btn-outline-primary @isPreviousPageDisabled">
            Previous
        </a>

        @for (int pageIndex = 1; pageIndex <= @Model.TotalPages; pageIndex++)
        {
            <a class="btn @getPageButtonAdditionalClassName(pageIndex)"
               asp-action="Index"
               asp-route-currentFilter="@ViewData["SubtitlesCatalogueSearchFilter"]"
               asp-route-pageSize="@ViewData["CurrentPageSize"]"
               asp-route-pageNumber="@pageIndex">
                @pageIndex
            </a>
        }

        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-pageSize="@ViewData["CurrentPageSize"]"
           asp-route-currentFilter="@ViewData["SubtitlesCatalogueSearchFilter"]"
           class="btn btn-outline-primary @isNextPageDisabled">
            Next
        </a>
    </div>
</div>

<div class="row">
    <div class="col-5">
        <div class="mt-2">Page @Model.PageIndex out of @Model.TotalPages </div>
    </div>
</div>
